We have not yet been able to implement the security measures for our protocol since we are still working out the kinks of getting the protocol up and running, However, we have decided on attacks that we want to protect our system against. Spoofing isn’t much of a worry because the system is being run in a controlled environment, so we will be getting the accurate IP of the sender from the system. Thus, the sender will not be able to act as though it has a different IP address so as to flood another node. Similarly, we chose not to consider blackhole attacks because we will actually be calculating the shortest paths based on the output of gen_weights, so we know which paths are actually the shortest. However, we can protect against attacks such as DOS and MITM using flow control, encryption, and signatures. To protect against a denial of service attack, we will regulate the rate at which packets are sent, such that the receiver is not flooded with too much traffic. To protect against eavesdropping on the network, we will encrypt packets before sending them across the network. Lastly, in order to protect against tampering, we will implement digital signatures, so that the receiver can verify that what they received is, in fact, from said sender.
To implement these security features, we have looked into Ruby’s pack() and unpack() functions as well as the OpenSSL Cipher library.
